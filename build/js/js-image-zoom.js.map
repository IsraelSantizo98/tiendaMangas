{"version":3,"sources":["js-image-zoom.js"],"names":["root","factory","module","exports","ImageZoom","this","container","opts","options","scaleX","scaleY","offset","data","sourceImg","element","width","height","naturalWidth","naturalHeight","zoomedImgOffset","vertical","horizontal","zoomedImg","zoomLens","div","document","createElement","lensDiv","zoomPosition","zoomContainer","events","handleEvent","event","type","handleMouseMove","handleMouseEnter","handleMouseLeave","handleScroll","offsetX","offsetY","backgroundPosition","zoomLensLeft","clientX","left","zoomLensTop","clientY","top","style","cssText","display","getOffset","setup","complete","onSourceImgLoad","onload","kill","_getInstanceInfo","el","elRect","getBoundingClientRect","getPosition","v","min","max","val","getValue","leftMin","topMin","fillContainer","scale","zoomWidth","setZoomedImgSize","backgroundSize","zoomStyle","zoomLensStyle","background","opacity","clientWidth","clientHeight","position","pointerEvents","img","src","appendChild","children","nodeName","querySelector","classList","add","backgroundImage","backgroundRepeat","transform","bottom","right","addEventListener","window","removeEventListener","removeChild"],"mappings":"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","file":"js-image-zoom.js","sourcesContent":["(function (root, factory) {\r\n    if (typeof module !== 'undefined' && module.exports) {\r\n        module.exports = factory();\r\n    } else {\r\n        root.ImageZoom = factory();\r\n    }\r\n}(this, function () {\r\n    /**\r\n     * @param {Object} container DOM element, which contains an image to be zoomed (required)\r\n     * @param {Object} options js-image-zoom options (required)\r\n     * **width** (number) - width of the source image (optional)\r\n     * **height** (number) - height of the source image (optional).\r\n     * **zoomWidth** (number) - width of the zoomed image. Zoomed image height equals source image height (optional)\r\n     * **img** (string) - url of the source image. Provided if container does not contain img element as a tag (optional)\r\n     * **scale** (number) - zoom scale. if not provided, scale is calculated as natural image size / image size, provided in params (optional if zoomWidth param is provided)\r\n     * **offset** (object) - {vertical: number, horizontal: number}. Zoomed image offset (optional)\r\n     * **zoomContainer** (node) - DOM node reference where zoomedImage will be appended to (default to the container element of image)\r\n     * **zoomStyle** (string) - custom style applied to the zoomed image (i.e. 'opacity: 0.1;background-color: white;')\r\n     * **zoomPosition** (string) - position of zoomed image. It can be:  `top`, `left`, `bottom`, `original` or the default `right`.\r\n     * **zoomLensStyle** (string) custom style applied to to zoom lents (i.e. 'opacity: 0.1;background-color: white;')\r\n     */\r\n    return function ImageZoom(container, opts) {\r\n        \"use strict\";\r\n        var options = opts;\r\n        if (!container) {\r\n            return;\r\n        }\r\n        var data = {\r\n            sourceImg: {\r\n                element: null,\r\n                width: 0,\r\n                height: 0,\r\n                naturalWidth: 0,\r\n                naturalHeight: 0\r\n            },\r\n            zoomedImgOffset: {\r\n                vertical: 0,\r\n                horizontal: 0\r\n            },\r\n            zoomedImg: {\r\n                element: null,\r\n                width: 0,\r\n                height: 0\r\n            },\r\n            zoomLens: {\r\n                element: null,\r\n                width: 0,\r\n                height: 0\r\n            }\r\n        };\r\n\r\n        var div = document.createElement('div');\r\n        var lensDiv = document.createElement('div');\r\n        var scaleX;\r\n        var scaleY;\r\n        var offset;\r\n        data.zoomedImgOffset = {\r\n            vertical: options.offset && options.offset.vertical ? options.offset.vertical : 0,\r\n            horizontal: options.offset && options.offset.horizontal ? options.offset.horizontal : 0\r\n        };\r\n        data.zoomPosition = options.zoomPosition || 'right';\r\n        data.zoomContainer = (options.zoomContainer) ? options.zoomContainer : container;\r\n        function getOffset(el) {\r\n            if (el) {\r\n                var elRect = el.getBoundingClientRect();\r\n                return {left: elRect.left, top: elRect.top};\r\n            }\r\n            return {left: 0, top: 0};\r\n        }\r\n\r\n        function leftLimit(min) {\r\n            return options.width - min;\r\n        }\r\n\r\n        function topLimit(min) {\r\n            return options.height - min;\r\n        }\r\n\r\n        function getValue(val, min, max) {\r\n            if (val < min) {\r\n                return min;\r\n            }\r\n            if (val > max) {\r\n                return max;\r\n            }\r\n            return val;\r\n        }\r\n\r\n        function getPosition(v, min, max) {\r\n            var value = getValue(v, min, max);\r\n            return value - min;\r\n        }\r\n\r\n        function zoomLensLeft(left) {\r\n            var leftMin = data.zoomLens.width / 2;\r\n            return getPosition(left, leftMin, leftLimit(leftMin));\r\n        }\r\n\r\n        function zoomLensTop(top) {\r\n            var topMin = data.zoomLens.height / 2;\r\n            return getPosition(top, topMin, topLimit(topMin));\r\n        }\r\n\r\n        function setZoomedImgSize(options, data) {\r\n            if (options.scale) {\r\n                data.zoomedImg.element.style.width = options.width * options.scale + 'px';\r\n                data.zoomedImg.element.style.height = options.height * options.scale + 'px';\r\n            } else if (options.zoomWidth) {\r\n                data.zoomedImg.element.style.width = options.zoomWidth + 'px';\r\n                data.zoomedImg.element.style.height = data.sourceImg.element.style.height;\r\n            } else {\r\n                data.zoomedImg.element.style.width = '100%';\r\n                data.zoomedImg.element.style.height = '100%';\r\n            }\r\n        }\r\n\r\n        function onSourceImgLoad() {\r\n            // use height determined by browser if height is not set in options\r\n            options.height = options.height || data.sourceImg.element.height;\r\n            data.sourceImg.element.style.height = options.fillContainer ? '100%': options.height + 'px';\r\n\r\n            // use width determined by browser if width is not set in options\r\n            options.width =  options.width || data.sourceImg.element.width;\r\n            data.sourceImg.element.style.width = options.fillContainer ? '100%': options.width + 'px';\r\n\r\n            setZoomedImgSize(options, data);\r\n\r\n            data.sourceImg.naturalWidth = data.sourceImg.element.naturalWidth;\r\n            data.sourceImg.naturalHeight = data.sourceImg.element.naturalHeight;\r\n            data.zoomedImg.element.style.backgroundSize = data.sourceImg.naturalWidth + 'px ' + data.sourceImg.naturalHeight + 'px';\r\n\r\n            if (options.zoomStyle) {\r\n                data.zoomedImg.element.style.cssText += options.zoomStyle;\r\n            }\r\n            if (options.zoomLensStyle) {\r\n                data.zoomLens.element.style.cssText += options.zoomLensStyle;\r\n            } else {\r\n                data.zoomLens.element.style.background = 'white';\r\n                data.zoomLens.element.style.opacity = '0.4';\r\n            }\r\n\r\n            scaleX = data.sourceImg.naturalWidth / options.width;\r\n            scaleY = data.sourceImg.naturalHeight / options.height;\r\n            offset = getOffset(data.sourceImg.element);\r\n\r\n            // set zoomLens dimensions\r\n            // if custom scale is set\r\n            if (options.scale) {\r\n                data.zoomLens.width = options.width / (data.sourceImg.naturalWidth / (options.width * options.scale));\r\n                data.zoomLens.height = options.height / (data.sourceImg.naturalHeight / (options.height * options.scale));\r\n            }\r\n\r\n            // else if zoomWidth is set\r\n            else if (options.zoomWidth) {\r\n                data.zoomLens.width = options.zoomWidth / scaleX;\r\n                data.zoomLens.height = options.height / scaleY;\r\n            }\r\n\r\n            // else read from the zoomedImg\r\n            else {\r\n                data.zoomedImg.element.style.display = 'block';\r\n                data.zoomLens.width = data.zoomedImg.element.clientWidth / scaleX;\r\n                data.zoomLens.height = data.zoomedImg.element.clientHeight / scaleY;\r\n                data.zoomedImg.element.style.display = 'none';\r\n            }\r\n\r\n            data.zoomLens.element.style.position = 'absolute';\r\n            data.zoomLens.element.style.width = data.zoomLens.width + 'px';\r\n            data.zoomLens.element.style.height = data.zoomLens.height + 'px';\r\n            data.zoomLens.element.pointerEvents = 'none';\r\n        }\r\n\r\n        function setup() {\r\n            // create sourceImg element\r\n            if (options.img) {\r\n                var img = document.createElement('img');\r\n                img.src = options.img;\r\n                data.sourceImg.element = container.appendChild(img);\r\n            }\r\n\r\n            // or get sourceImg element from specified container\r\n            else {\r\n                data.sourceImg.element = container.children[0];\r\n\r\n                // if sourceImg is not an img (might be a picture element), try to find one\r\n                if (data.sourceImg.element.nodeName !== \"IMG\") {\r\n                    data.sourceImg.element = data.sourceImg.element.querySelector('img');\r\n                }\r\n            }\r\n\r\n            options = options || {};\r\n            container.style.position = 'relative';\r\n            data.sourceImg.element.style.width = options.fillContainer ? '100%' : options.width ? options.width + 'px' : 'auto';\r\n            data.sourceImg.element.style.height = options.fillContainer ? '100%' : options.height ? options.height + 'px' : 'auto';\r\n\r\n            data.zoomLens.element = container.appendChild(lensDiv);\r\n            data.zoomLens.element.style.display = 'none';\r\n            data.zoomLens.element.classList.add('js-image-zoom__zoomed-area');\r\n\r\n            data.zoomedImg.element = data.zoomContainer.appendChild(div);\r\n            data.zoomedImg.element.classList.add('js-image-zoom__zoomed-image');\r\n            data.zoomedImg.element.style.backgroundImage = \"url('\" + data.sourceImg.element.src + \"')\";\r\n            data.zoomedImg.element.style.backgroundRepeat = 'no-repeat';\r\n            data.zoomedImg.element.style.display = 'none';\r\n\r\n            switch (data.zoomPosition) {\r\n                case 'left':\r\n                    data.zoomedImg.element.style.position = 'absolute';\r\n                    data.zoomedImg.element.style.top = data.zoomedImgOffset.vertical + 'px';\r\n                    data.zoomedImg.element.style.left = data.zoomedImgOffset.horizontal - (data.zoomedImgOffset.horizontal * 2) + 'px';\r\n                    data.zoomedImg.element.style.transform = 'translateX(-100%)';\r\n                    break;\r\n\r\n                case 'top':\r\n                    data.zoomedImg.element.style.position = 'absolute';\r\n                    data.zoomedImg.element.style.top = data.zoomedImgOffset.vertical - (data.zoomedImgOffset.vertical * 2) + 'px';\r\n                    data.zoomedImg.element.style.left = 'calc(50% + ' + data.zoomedImgOffset.horizontal + 'px)';\r\n                    data.zoomedImg.element.style.transform = 'translate3d(-50%, -100%, 0)';\r\n                    break;\r\n\r\n                case 'bottom':\r\n                    data.zoomedImg.element.style.position = 'absolute';\r\n                    data.zoomedImg.element.style.bottom = data.zoomedImgOffset.vertical - (data.zoomedImgOffset.vertical * 2) + 'px';\r\n                    data.zoomedImg.element.style.left = 'calc(50% + ' + data.zoomedImgOffset.horizontal + 'px)';\r\n                    data.zoomedImg.element.style.transform = 'translate3d(-50%, 100%, 0)';\r\n                    break;\r\n\r\n                case 'original':\r\n                    data.zoomedImg.element.style.position = 'absolute';\r\n                    data.zoomedImg.element.style.top = '0px';\r\n                    data.zoomedImg.element.style.left = '0px';\r\n                    break;\r\n\r\n                // Right Position\r\n                default:\r\n                    data.zoomedImg.element.style.position = 'absolute';\r\n                    data.zoomedImg.element.style.top = data.zoomedImgOffset.vertical + 'px';\r\n                    data.zoomedImg.element.style.right = data.zoomedImgOffset.horizontal - (data.zoomedImgOffset.horizontal * 2) + 'px';\r\n                    data.zoomedImg.element.style.transform = 'translateX(100%)';\r\n                    break;\r\n            }\r\n\r\n\r\n            // setup event listeners\r\n            container.addEventListener('mousemove', events, false);\r\n            container.addEventListener('mouseenter', events, false);\r\n            container.addEventListener('mouseleave', events, false);\r\n            data.zoomLens.element.addEventListener('mouseenter', events, false);\r\n            data.zoomLens.element.addEventListener('mouseleave', events, false);\r\n            window.addEventListener('scroll', events, false);\r\n\r\n            return data;\r\n        }\r\n\r\n        function kill() {\r\n\r\n            // remove event listeners\r\n            container.removeEventListener('mousemove', events, false);\r\n            container.removeEventListener('mouseenter', events, false);\r\n            container.removeEventListener('mouseleave', events, false);\r\n            data.zoomLens.element.removeEventListener('mouseenter', events, false);\r\n            data.zoomLens.element.removeEventListener('mouseleave', events, false);\r\n            window.removeEventListener('scroll', events, false);\r\n\r\n            // remove dom nodes\r\n            if (data.zoomLens && data.zoomedImg) {\r\n                container.removeChild(data.zoomLens.element);\r\n                data.zoomContainer.removeChild(data.zoomedImg.element);\r\n            }\r\n\r\n            if (options.img) {\r\n                container.removeChild(data.sourceImg.element);\r\n            } else {\r\n                data.sourceImg.element.style.width = '';\r\n                data.sourceImg.element.style.height = '';\r\n            }\r\n\r\n            return data;\r\n        }\r\n\r\n        var events = {\r\n            handleEvent: function (event) {\r\n                switch (event.type) {\r\n                    case 'mousemove':\r\n                        return this.handleMouseMove(event);\r\n                    case 'mouseenter':\r\n                        return this.handleMouseEnter(event);\r\n                    case 'mouseleave':\r\n                        return this.handleMouseLeave(event);\r\n                    case 'scroll':\r\n                        return this.handleScroll(event);\r\n                }\r\n            },\r\n            handleMouseMove: function (event) {\r\n                var offsetX;\r\n                var offsetY;\r\n                var backgroundTop;\r\n                var backgroundRight;\r\n                var backgroundPosition;\r\n                if (offset) {\r\n                    offsetX = zoomLensLeft(event.clientX - offset.left);\r\n                    offsetY = zoomLensTop(event.clientY - offset.top);\r\n                    backgroundTop = offsetX * scaleX;\r\n                    backgroundRight = offsetY * scaleY;\r\n                    backgroundPosition = '-' + backgroundTop + 'px ' + '-' + backgroundRight + 'px';\r\n                    data.zoomedImg.element.style.backgroundPosition = backgroundPosition;\r\n                    data.zoomLens.element.style.cssText += 'transform:' + 'translate(' + offsetX + 'px,' + offsetY +'px);display: block;left:0px;top:0px;'\r\n\r\n                }\r\n            },\r\n            handleMouseEnter: function () {\r\n                data.zoomedImg.element.style.display = 'block';\r\n                data.zoomLens.element.style.display = 'block';\r\n\r\n            },\r\n            handleMouseLeave: function () {\r\n                data.zoomedImg.element.style.display = 'none';\r\n                data.zoomLens.element.style.display = 'none';\r\n            },\r\n            handleScroll: function () {\r\n                offset = getOffset(data.sourceImg.element);\r\n            }\r\n        };\r\n\r\n        // Setup/Initialize library\r\n        setup();\r\n\r\n        if (data.sourceImg.element.complete) {\r\n            onSourceImgLoad();\r\n        } else {\r\n            data.sourceImg.element.onload = onSourceImgLoad;\r\n        }\r\n\r\n        return {\r\n            setup: function () {\r\n                setup();\r\n            },\r\n            kill: function () {\r\n                kill();\r\n            },\r\n            _getInstanceInfo: function () {\r\n                return {\r\n                    setup: setup,\r\n                    kill: kill,\r\n                    onSourceImgLoad: onSourceImgLoad,\r\n                    data: data,\r\n                    options: options\r\n                }\r\n            }\r\n        }\r\n    }\r\n}));\r\n"]}